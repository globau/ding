#!/usr/bin/env python3

# Requires ding.mp3 and error.mp3 in same directory as script.
# macOS only.
#
# syntax: ding [command]
#
# Without a command, ding plays ding.mp3
#
# With a command, ding will execute that command and play ding.mp3 if the
# command completed without error, otherwise error.mp3 will be played.
#
# If the command took more than one second to execute, the elapsed time will be
# shown.

import os
import subprocess
import sys
import time
from pathlib import Path


def main() -> None:
    return_code = 0
    if len(sys.argv) > 1:
        start = time.monotonic()

        try:
            return_code = subprocess.run(sys.argv[1:], check=True).returncode
        except subprocess.CalledProcessError as e:
            return_code = e.returncode
        except OSError as e:
            print(e.strerror, file=sys.stderr)
            return_code = 1

        duration = round(time.monotonic() - start)

        if duration > 5:
            hours, seconds = divmod(duration, 3600)
            minutes, seconds = divmod(seconds, 60)
            if hours > 0:
                parts = [seconds, minutes, hours]
            elif minutes > 0:
                parts = [seconds, minutes]
            else:
                parts = [seconds]
            elapsed = []
            for value, unit in zip(parts,  ("s", "m", "h"), strict=False):
                if value > 0:
                    elapsed.insert(0, f"{value:d}{unit}")
            elapsed_str = "".join(elapsed)
            print(f"Elapsed: {elapsed_str}")

    if os.fork() == 0:
        sound = "ding.mp3" if return_code == 0 else "error.mp3"
        filename = Path(__file__).resolve().parent / sound
        if filename.exists():
            subprocess.run(["afplay", filename], check=False)
        else:
            sys.exit(f"ding: failed to find {sound}")
        sys.exit()

    sys.exit(return_code)


main()
